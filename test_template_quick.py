#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç HTML —à–∞–±–ª–æ–Ω–∞ –±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
"""

import os
import sys
import time
import logging

# Add path to scripts folder
sys.path.append(os.path.abspath('scripts'))

from scripts.video_exporter import VideoExporter
from scripts.telegram_bot import NewsTelegramBot
import yaml

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

def test_template_quick():
    print("=== –ë–´–°–¢–†–´–ô –¢–ï–°–¢ HTML –®–ê–ë–õ–û–ù–ê ===")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–æ–≤–æ—Å—Ç—å –∏–∑ –±–∞–∑—ã
    config_path = 'config/config.yaml'
    bot = NewsTelegramBot(config_path)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–æ–≤–æ—Å—Ç—å
    news_id = 366  # –ü–æ—Å–ª–µ–¥–Ω—è—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å
    news_data = bot.get_news_by_id(news_id)
    
    if not news_data:
        print(f"‚ùå –ù–æ–≤–æ—Å—Ç—å {news_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å {news_id}: {news_data.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open(config_path, 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    video_config = config.get('video', {})
    paths_config = config.get('paths', {})
    
    # –°–æ–∑–¥–∞–µ–º VideoExporter
    exporter = VideoExporter(video_config, paths_config)
    
    # –°–æ–∑–¥–∞–µ–º video_package —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    video_package = {
        'video_content': {
            'title': 'UK Formally Recognizes State of Palestine',
            'summary': 'The United Kingdom has formally recognized the State of Palestine. The move is intended to revive hope for peace between Palestinians and Israelis and to support a two-state solution.'
        },
        'source_info': {
            'name': 'TWITTER',
            'username': news_data.get('username', 'Keir_Starmer'),
            'url': news_data.get('url', 'https://x.com/Keir_Starmer/status/1969751392802750719'),
            'publish_date': '21.09.2025',
            'avatar_path': news_data.get('avatar_path', 'resources/logos/avatar_Keir_Starmer.png')
        },
        'media': {
            'local_image_path': news_data.get('local_image_path', 'resources/media/news/Today to revive the hope of peace for the Palestin_980240.jpeg'),
            'local_video_path': news_data.get('local_video_path', ''),
            'avatar_path': news_data.get('avatar_path', 'resources/logos/avatar_Keir_Starmer.png')
        }
    }
    
    print("üîç –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª...")
    
    # –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª
    html_path = exporter._create_news_short_html(video_package)
    
    if html_path:
        print(f"‚úÖ HTML —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {html_path}")
        print(f"üìÇ –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ: file:///{os.path.abspath(html_path)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–µ–≤—ã—Ö —Å—Ç—Ä–æ–∫
        with open(html_path, 'r', encoding='utf-8') as f:
            content = f.read()
            
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤–∞—Ç–∞—Ä–∫—É
        if 'avatar_Keir_Starmer.png' in content:
            print("‚úÖ –ê–≤–∞—Ç–∞—Ä–∫–∞ Twitter –Ω–∞–π–¥–µ–Ω–∞ –≤ HTML")
        else:
            print("‚ùå –ê–≤–∞—Ç–∞—Ä–∫–∞ Twitter –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ HTML")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–¥–∏–∞
        if 'Today to revive the hope of peace for the Palestin' in content:
            print("‚úÖ –ú–µ–¥–∏–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ –≤ HTML")
        else:
            print("‚ùå –ú–µ–¥–∏–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ HTML")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
        if '{{TWITTER_AVATAR}}' in content:
            print("‚ùå –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä {{TWITTER_AVATAR}} –æ—Å—Ç–∞–ª—Å—è –≤ HTML")
        else:
            print("‚úÖ –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä {{TWITTER_AVATAR}} –∑–∞–º–µ–Ω–µ–Ω")
            
        if '{{NEWS_IMAGE}}' in content:
            print("‚ùå –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä {{NEWS_IMAGE}} –æ—Å—Ç–∞–ª—Å—è –≤ HTML")
        else:
            print("‚úÖ –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä {{NEWS_IMAGE}} –∑–∞–º–µ–Ω–µ–Ω")
            
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è HTML —Ñ–∞–π–ª–∞")

if __name__ == "__main__":
    test_template_quick()
