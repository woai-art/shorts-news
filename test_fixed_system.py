#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ –±—Ä–∞—É–∑–µ—Ä–∞
"""

import os
import sys
sys.path.append('scripts')

def test_fixed_system():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv('GOOGLE_API_KEY') or os.getenv('GEMINI_API_KEY')

    if not api_key:
        print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ GOOGLE_API_KEY –∏–ª–∏ GEMINI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False

    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω (–¥–ª–∏–Ω–∞: {len(api_key)} —Å–∏–º–≤–æ–ª–æ–≤)")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π API –ø—Ä–æ–≤–∞–π–¥–µ—Ä
    try:
        print("\\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ API –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞...")
        from llm_direct_provider import GeminiDirectProvider

        provider = GeminiDirectProvider(api_key)
        test_text = "This is a test news about technology and AI."
        result = provider.summarize_for_video(test_text)

        if result and len(result) > 10:
            print(f"‚úÖ –ü—Ä—è–º–æ–π API —Ä–∞–±–æ—Ç–∞–µ—Ç: {result[:50]}...")
        else:
            print("‚ùå –ü—Ä—è–º–æ–π API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å –ø—Ä—è–º—ã–º API –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º: {e}")
        return False

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π LLM –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
    try:
        print("\\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ LLM –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞...")
        from llm_processor import GeminiProvider

        config = {
            'temperature': 0.7,
            'max_tokens': 2000,
            'enable_fact_checking': False  # –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–∫–∞
        }

        processor = GeminiProvider(api_key, config=config)
        result = processor.summarize_for_video(test_text)

        if result and len(result) > 10:
            print(f"‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: {result[:50]}...")
        else:
            print("‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º: {e}")
        return False

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é SEO
    try:
        print("\\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SEO...")
        seo_result = processor.generate_seo_package(test_text)

        if seo_result and 'title' in seo_result:
            print(f"‚úÖ SEO –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: {seo_result['title'][:50]}...")
        else:
            print("‚ùå SEO –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å SEO –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π: {e}")
        return False

    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 60)

    success = test_fixed_system()

    print("\\n" + "=" * 60)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –ü—Ä—è–º–æ–π API –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ SEO –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("\\nüöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É –±–µ–∑ –±—Ä–∞—É–∑–µ—Ä–∞")
    else:
        print("üí• –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò!")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞")
        print("2. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞")
        print("3. –í–µ—Ä—Å–∏—é Python –∏ –ø–∞–∫–µ—Ç–æ–≤")

    return 0 if success else 1

if __name__ == "__main__":
    sys.exit(main())
