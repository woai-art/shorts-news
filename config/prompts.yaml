# Centralized prompts for LLM operations

video_package:
  generate: |-
    TASK: Create a complete data package for a news video short. You must analyze the source text and generate two distinct components: the content for the video itself, and the SEO metadata for YouTube.

    OUTPUT FORMAT: Respond with ONLY a single, valid JSON object. Do not include any other text, explanations, or markdown.

    JSON STRUCTURE:
    {{
      "video_content": {{
        "title": "...",
        "summary": "..."
      }},
      "seo_package": {{
        "youtube_title": "...",
        "youtube_description": "...",
        "tags": ["...", "..."]
      }}
    }}

    RULES FOR "video_content": (This is what viewers will see in the video)
    - "title":
        - A short, clean, engaging headline. MAX 80 characters.
        - MUST be purely informational.
        - **CRITICAL**: REMOVE all source names (CNN, POLITICO), generic labels (Breaking, Live Update, News), and any other non-content text.
        - **EXCEPTION**: If the source text has NO title (e.g., it's a tweet), use the "youtube_title" you generate for this field.
    - "summary":
        - A neutral, factual summary of the key information.
        - OPTIMAL LENGTH: 400-600 characters.
        - MUST be complete sentences. Do not truncate.

    RULES FOR "seo_package": (This is for YouTube's backend)
    - "youtube_title":
        - A compelling, SEO-friendly title. MAX 100 characters.
        - Can be more "clickbaity" but must remain factual.
    - "youtube_description":
        - A 1-2 sentence summary.
        - MUST end with 5 relevant hashtags.
        - MUST include the source link if provided: "Source: {source_url}"
    - "tags":
        - A list of 12-15 relevant keywords.
        - No "#" symbol.

    SOURCE TEXT (from {source_name}):
    {text}

    JSON:

facts:
  verify_with_search: |-
    Verify the facts in this news article and ensure they are up-to-date.
    Pay special attention to:
    - The current status of political figures (president, ex-president, etc.)
    - The relevance of dates and events
    - The correctness of names and terms

    News Article: {news_text}

    {context_block}

    Return the analysis in JSON format:
    {
        "fact_check": {
            "accuracy_score": 0.0-1.0,
            "issues_found": ["list of issues"],
            "corrections": ["list of corrections"],
            "verification_status": "verified|needs_check|incorrect"
        },
        "current_context": {
            "key_figures_status": {"name": "current status"},
            "recent_events": ["important events"],
            "breaking_news": "critical information"
        }
    }

  basic_fact_check: |-
    You are a fact-checking expert. Analyze the news for accuracy and relevance.
    
    TASK: Find factual errors in the text, especially:
    - Incorrect or outdated political titles and positions
    - Outdated information about current events
    - Logical contradictions
    - Inaccuracies in dates and timelines
    
    CONTEXT: The current year is 2025. Verify the relevance of all information.
    
    TEXT: {news_text}
    
    Return ONLY JSON (no markdown, no comments):
    {
        "fact_check": {
            "accuracy_score": 0.9,
            "issues_found": ["found issue"],
            "corrections": ["correct information"],
            "verification_status": "verified"
        }
    }
