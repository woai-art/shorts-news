#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Å—ã—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ Tavily API
"""

import sys
sys.path.append('scripts')
from web_parser import TavilyParser
import logging

logging.basicConfig(level=logging.INFO)

def debug_tavily_raw():
    """–û—Ç–ª–∞–¥–∫–∞ —Å—ã—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ Tavily"""
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ —Å—ã—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ Tavily API:")
    print("=" * 80)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Tavily –ø–∞—Ä—Å–µ—Ä
    tavily_parser = TavilyParser()
    
    # URL —Å—Ç–∞—Ç—å–∏
    test_url = "https://www.politico.com/news/2025/09/16/cruz-says-first-amendment-absolutely-protects-hate-speech-in-wake-of-charlie-kirk-killing-00566448"
    
    print(f"URL: {test_url}")
    print("=" * 80)
    
    # –î–µ–ª–∞–µ–º –ø—Ä—è–º–æ–π –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Tavily
    try:
        results = tavily_parser._search_tavily(test_url)
        
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results)}")
        
        for i, result in enumerate(results):
            print(f"\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç {i+1}:")
            print(f"  Type: {type(result)}")
            
            if isinstance(result, dict):
                print(f"  Title: {result.get('title', 'N/A')}")
                print(f"  URL: {result.get('url', 'N/A')}")
                print(f"  Content length: {len(result.get('content', ''))}")
                print(f"  HTML length: {len(result.get('html', ''))}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª—é—á–∏
                print(f"  Keys: {list(result.keys())}")
                
                # –ò—â–µ–º Brightcove –≤ content
                content = result.get('content', '')
                if 'brightcove' in content.lower():
                    print("  ‚úÖ –ù–∞–π–¥–µ–Ω 'brightcove' –≤ content!")
                else:
                    print("  ‚ùå 'brightcove' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ content")
                    
                # –ò—â–µ–º Brightcove –≤ HTML
                html = result.get('html', '')
                if 'brightcove' in html.lower():
                    print("  ‚úÖ –ù–∞–π–¥–µ–Ω 'brightcove' –≤ HTML!")
                else:
                    print("  ‚ùå 'brightcove' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ HTML")
                    
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ content
                if content:
                    print(f"  Content preview: {content[:200]}...")
                    
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ HTML
                if html:
                    print(f"  HTML preview: {html[:200]}...")
            else:
                print(f"  Content: {str(result)[:200]}...")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–µ—Ä–µ–∑ Tavily: {e}")

if __name__ == "__main__":
    debug_tavily_raw()
