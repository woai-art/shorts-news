#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import tempfile
from scripts.video_exporter import VideoExporter
import yaml
import logging

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

def test_media_display():
    print("=== –¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ú–ï–î–ò–ê ===")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
    with open('config/config.yaml', 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    video_config = config.get('video', {})
    paths_config = config.get('paths', {})
    
    # –°–æ–∑–¥–∞–µ–º VideoExporter
    exporter = VideoExporter(video_config, paths_config)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –≤–∏–¥–µ–æ
    video_package = {
        'video_content': {
            'title': 'RAF Typhoons Patrol Polish Airspace',
            'summary': 'RAF Typhoons and a Voyager tanker were deployed overnight from the UK to patrol Polish airspace. This deployment is part of NATO\'s new Eastern Sentry mission.'
        },
        'seo_package': {
            'youtube_title': 'RAF Typhoons Deployed to Patrol Polish Airspace',
            'youtube_description': 'RAF Typhoons have been deployed to patrol Polish airspace following Russian airspace violations.',
            'tags': ['RAF', 'Typhoons', 'Poland', 'NATO']
        },
        'media': {
            'local_video_path': 'resources/media/news/BREAKING - RAF Typhoons and a Voyager tanker deplo_393465.mp4',
            'local_image_path': None,
            'avatar_path': 'resources/logos/avatar_NSTRIKE1231.png',
            'has_media': True,
            'has_video': True,
            'has_images': False
        },
        'source_info': {
            'name': 'TWITTER',
            'username': 'NSTRIKE1231',
            'url': 'https://x.com/NSTRIKE1231/status/1969503499852321081',
            'publish_date': '20.09.2025',
            'avatar_path': 'resources/logos/avatar_NSTRIKE1231.png'
        }
    }
    
    print("üîç –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª —Å –≤–∏–¥–µ–æ...")
    
    # –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª
    html_path = exporter._create_news_short_html(video_package)
    
    if html_path and os.path.exists(html_path):
        print(f"‚úÖ HTML —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {html_path}")
        print(f"üìÇ –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ: file:///{html_path}")
        
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        with open(html_path, 'r', encoding='utf-8') as f:
            html_content = f.read()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—Ç—å HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        print(f"\nüîç –ê–Ω–∞–ª–∏–∑ HTML (—Å—Ç—Ä–æ–∫–∏ 280-290):")
        lines = html_content.split('\n')
        for i, line in enumerate(lines[275:285], 276):
            print(f"{i:3d}: {line}")
    else:
        print("‚ùå HTML —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏–¥–µ–æ
    if 'BREAKING - RAF Typhoons' in html_content:
        print("‚úÖ –í–∏–¥–µ–æ –Ω–∞–π–¥–µ–Ω–æ –≤ HTML")
    else:
        print("‚ùå –í–∏–¥–µ–æ –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ HTML")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏
    if 'avatar_NSTRIKE1231.png' in html_content:
        print("‚úÖ –ê–≤–∞—Ç–∞—Ä–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ HTML")
    else:
        print("‚ùå –ê–≤–∞—Ç–∞—Ä–∫–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ HTML")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–º–µ–Ω—É –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤
    if '{{NEWS_VIDEO}}' not in html_content:
        print("‚úÖ –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä {{NEWS_VIDEO}} –∑–∞–º–µ–Ω–µ–Ω")
    else:
        print("‚ùå –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä {{NEWS_VIDEO}} –ù–ï –∑–∞–º–µ–Ω–µ–Ω")
    
    if '{{TWITTER_AVATAR}}' not in html_content:
        print("‚úÖ –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä {{TWITTER_AVATAR}} –∑–∞–º–µ–Ω–µ–Ω")
    else:
        print("‚ùå –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä {{TWITTER_AVATAR}} –ù–ï –∑–∞–º–µ–Ω–µ–Ω")

if __name__ == "__main__":
    test_media_display()
