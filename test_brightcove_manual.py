#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Brightcove –≤–∏–¥–µ–æ —Å —Ä—É—á–Ω—ã–º URL
"""

import sys
sys.path.append('scripts')
from media_manager import MediaManager
import yaml
import logging

logging.basicConfig(level=logging.INFO)

def test_brightcove_manual():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Brightcove –≤–∏–¥–µ–æ —Å —Ä—É—á–Ω—ã–º URL"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Brightcove –≤–∏–¥–µ–æ —Å —Ä—É—á–Ω—ã–º URL:")
    print("=" * 80)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open('config/config.yaml', 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º media_manager
    media_manager = MediaManager(config)
    
    # Brightcove URL –∏–∑ —Å—Ç–∞—Ç—å–∏
    brightcove_url = "https://players.brightcove.net/1155968404/r1WF6V0Pl_default/index.html?videoId=6379606624112"
    news_title = "Cruz says First Amendment 'absolutely protects hate speech'"
    
    print(f"URL: {brightcove_url}")
    print(f"Title: {news_title}")
    print("=" * 80)
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
    video_path = media_manager._download_and_process_video(brightcove_url, news_title)
    
    if video_path:
        print(f"‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ: {video_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        from pathlib import Path
        file_size = Path(video_path).stat().st_size
        print(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç ({file_size / 1024 / 1024:.1f} –ú–ë)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        try:
            from moviepy import VideoFileClip
            with VideoFileClip(video_path) as video_clip:
                duration = video_clip.duration
                print(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration:.1f} —Å–µ–∫—É–Ω–¥")
                print(f"–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {video_clip.size[0]}x{video_clip.size[1]}")
                print(f"FPS: {video_clip.fps}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ: {e}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ")

if __name__ == "__main__":
    test_brightcove_manual()
