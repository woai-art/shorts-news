#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å Twitter –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
"""

import logging
from scripts.llm_processor import LLMProcessor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_twitter_processing():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ Twitter –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    
    logger.info("üê¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É Twitter –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
        processor = LLMProcessor('config/config.yaml')
        logger.info("‚úÖ LLM –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Twitter
        twitter_data = {
            'title': 'Tweet –æ—Ç OSINTdefender –æ –≤–æ–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö –≤ –£–∫—Ä–∞–∏–Ω–µ',
            'description': 'OSINT –∞–Ω–∞–ª–∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ —Å –∫–∞—Ä—Ç–æ–π –∏ –¥–µ—Ç–∞–ª—è–º–∏ –æ–ø–µ—Ä–∞—Ü–∏–π',
            'url': 'https://x.com/sentdefender/status/1967799197513470458',
            'source': 'TWITTER',
            'media': [
                'https://pbs.twimg.com/media/G08G8POWYAAqZyV?format=gif&name=medium'
            ],
            'published': '2025-09-16T03:54:23+00:00'
        }
        
        logger.info(f"üß™ –¢–µ—Å—Ç–æ–≤—ã–π Twitter –ø–æ—Å—Ç: '{twitter_data['title']}'")
        logger.info(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: '{twitter_data['description']}'")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —à–∞–≥ –æ—Ç–¥–µ–ª—å–Ω–æ
        logger.info("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º summarize_for_video...")
        video_text = processor.provider.summarize_for_video(twitter_data['description'])
        logger.info(f"üìù Video text: '{video_text[:100]}...'")
        
        logger.info("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º generate_seo_package...")
        seo_result = processor.provider.generate_seo_package(twitter_data['description'], twitter_data['url'])
        logger.info(f"üéØ SEO title: '{seo_result.get('title', '')}'")
        
        logger.info("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")
        result = processor.process_news_for_shorts(twitter_data)
        
        logger.info("‚úÖ Twitter –∫–æ–Ω—Ç–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
        
        # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ë–†–ê–ë–û–¢–ö–ò:")
        print(f"üéØ Title: '{result.get('title', '')}'")
        print(f"üìù Summary: '{result.get('summary', '')[:100]}...'")
        print(f"üé¨ Video text: '{result.get('video_text', '')[:100]}...'")
        
        seo = result.get('seo_package', {})
        print(f"üì∫ SEO title: '{seo.get('title', '')}'")
        print(f"üìù SEO description: '{seo.get('description', '')[:100]}...'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã
        print(f"\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú:")
        
        video_text_issue = result.get('video_text', '').startswith('Please provide')
        print(f"   Video text –∑–∞–≥–ª—É—à–∫–∞: {'‚ùå' if video_text_issue else '‚úÖ'}")
        
        title_issue = result.get('title', '').startswith('Breaking:')
        print(f"   Title —Å 'Breaking:': {'‚ùå' if title_issue else '‚úÖ'}")
        
        empty_summary = len(result.get('summary', '')) < 50
        print(f"   Summary —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π: {'‚ùå' if empty_summary else '‚úÖ'}")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_twitter_processing()
    
    if success:
        logger.info("‚úÖ –¢–µ—Å—Ç Twitter –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    else:
        logger.error("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")
