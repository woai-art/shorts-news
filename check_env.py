#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –±–µ–∑ –∏–º–ø–æ—Ä—Ç–∞ SDK
"""

import os
import sys

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–†–ï–î–´ –í–´–ü–û–õ–ù–ï–ù–ò–Ø")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    google_key = os.getenv('GOOGLE_API_KEY')
    gemini_key = os.getenv('GEMINI_API_KEY')

    print("üìã –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:")
    print(f"  GOOGLE_API_KEY: {'‚úÖ –£–°–¢–ê–ù–û–í–õ–ï–ù–ê' if google_key else '‚ùå –ù–ï–¢'}")
    print(f"  GEMINI_API_KEY: {'‚úÖ –£–°–¢–ê–ù–û–í–õ–ï–ù–ê' if gemini_key else '‚ùå –ù–ï–¢'}")

    if google_key:
        print(f"  –î–ª–∏–Ω–∞ GOOGLE_API_KEY: {len(google_key)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"  –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {google_key[:20]}..." if len(google_key) > 20 else f"  –ü–æ–ª–Ω–æ—Å—Ç—å—é: {google_key}")

    if gemini_key:
        print(f"  –î–ª–∏–Ω–∞ GEMINI_API_KEY: {len(gemini_key)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"  –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {gemini_key[:20]}..." if len(gemini_key) > 20 else f"  –ü–æ–ª–Ω–æ—Å—Ç—å—é: {gemini_key}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_file = 'config/.env'
    if os.path.exists(env_file):
        print(f"\nüìÑ –ê–ù–ê–õ–ò–ó .env –§–ê–ô–õ–ê: {env_file}")
        try:
            with open(env_file, 'r', encoding='utf-8') as f:
                content = f.read()

            lines = content.split('\n')
            found_keys = {}

            for i, line in enumerate(lines, 1):
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    key = key.strip()
                    value = value.strip()

                    if key in ['GOOGLE_API_KEY', 'GEMINI_API_KEY']:
                        found_keys[key] = {
                            'line': i,
                            'length': len(value),
                            'preview': value[:20] + '...' if len(value) > 20 else value,
                            'empty': len(value) == 0
                        }

            if found_keys:
                for key, info in found_keys.items():
                    status = '‚ùå –ü–£–°–¢–û–ô' if info['empty'] else f"‚úÖ {info['length']} —Å–∏–º–≤–æ–ª–æ–≤"
                    print(f"  –°—Ç—Ä–æ–∫–∞ {info['line']}: {key} = {status}")
                    print(f"    –ó–Ω–∞—á–µ–Ω–∏–µ: {info['preview']}")
            else:
                print("  ‚ùå –ö–ª—é—á–∏ API –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")

        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
    else:
        print(f"\n‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω: {env_file}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    print(f"\nüêç –í–ï–†–°–ò–Ø PYTHON: {sys.version}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SDK —Ñ–∞–π–ª–æ–≤
    print("
üîß –ü–†–û–í–ï–†–ö–ê SDK:"    try:
        import google
        print("  ‚úÖ google package –Ω–∞–π–¥–µ–Ω")
    except ImportError:
        print("  ‚ùå google package –ù–ï –Ω–∞–π–¥–µ–Ω")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    try:
        import subprocess
        result = subprocess.run([sys.executable, '-m', 'pip', 'list'], capture_output=True, text=True, timeout=10)
        packages = result.stdout.lower()

        sdk_found = {
            'google-genai': 'google-genai' in packages,
            'google-generativeai': 'google-generativeai' in packages,
            'google-auth': 'google-auth' in packages
        }

        print("
üì¶ –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –ü–ê–ö–ï–¢–´:"        for package, found in sdk_found.items():
            print(f"  {package}: {'‚úÖ' if found else '‚ùå'}")

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–∫–µ—Ç–æ–≤: {e}")

    return google_key or gemini_key

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–ê–ü–£–°–ö –ü–†–û–í–ï–†–ö–ò –°–ò–°–¢–ï–ú–´")
    print("=" * 50)

    has_api_key = check_environment()

    print("\n" + "=" * 50)
    if has_api_key:
        print("‚úÖ API –ö–õ–Æ–ß –ù–ê–ô–î–ï–ù")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python test_gemini_api.py")
        print("üîß –ï—Å–ª–∏ –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è - –ø—Ä–æ–±–ª–µ–º–∞ –≤ OAuth –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
    else:
        print("‚ùå API –ö–õ–Æ–ß –ù–ï –ù–ê–ô–î–ï–ù")
        print("üìù –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("   GOOGLE_API_KEY=–≤–∞—à_–∫–ª—é—á_–∑–¥–µ—Å—å")
        print("   –∏–ª–∏")
        print("   GEMINI_API_KEY=–≤–∞—à_–∫–ª—é—á_–∑–¥–µ—Å—å")
        print("üîó –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á: https://makersuite.google.com/app/apikey")

    print("\nüõ†Ô∏è  –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ API –∫–ª—é—á –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∫–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω –≤ Google Cloud Console")
    print("3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä—Å–∏—é google-genai –ø–∞–∫–µ—Ç–∞")

if __name__ == "__main__":
    main()
