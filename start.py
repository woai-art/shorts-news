#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π –∑–∞–ø—É—Å–∫–∞—é—â–∏–π —Å–∫—Ä–∏–ø—Ç —Å–∏—Å—Ç–µ–º—ã shorts_news.
–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –≤ —Ä–µ–∂–∏–º–µ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –æ–∂–∏–¥–∞—é—â–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.
–ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–∑ start.ps1, –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ.
"""

import os
import sys
import logging
import time
from pathlib import Path

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
from dotenv import load_dotenv
env_path = Path('.') / 'config' / '.env'
load_dotenv(dotenv_path=env_path)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–æ —Å–∫—Ä–∏–ø—Ç–∞–º–∏, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
sys.path.append(os.path.abspath('scripts'))

try:
    from main_orchestrator import ShortsNewsOrchestrator
except ImportError as e:
    print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å ShortsNewsOrchestrator. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞. –û—à–∏–±–∫–∞: {e}")
    sys.exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('logs/shorts_news.log', encoding='utf-8'),
        logging.StreamHandler(sys.stdout)
    ]
)
logger = logging.getLogger("start")

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
    """
    config_path = 'config/config.yaml'
    if not os.path.exists(config_path):
        logger.error(f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {config_path}")
        sys.exit(1)

    logger.info("=" * 50)
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π...")
    logger.info("=" * 50)

    try:
        # –°–æ–∑–¥–∞–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä
        orchestrator = ShortsNewsOrchestrator(config_path)
        orchestrator.initialize_components()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–¥–∏–Ω –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –æ–∂–∏–¥–∞—é—â–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
        # –ú–µ—Ç–æ–¥ run_single_cycle –±—ã–ª –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —ç—Ç–æ–π —Ü–µ–ª–∏
        orchestrator.run_single_cycle()

    except Exception as e:
        logger.critical(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º —Ü–∏–∫–ª–µ.", exc_info=True)
        # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    finally:
        logger.info("=" * 50)
        logger.info("‚úÖ –¶–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω.")
        logger.info("=" * 50)
        # –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–∫—Ä—ã—Ç–∏–µ WebDriver)
        if 'orchestrator' in locals() and orchestrator:
            orchestrator.cleanup()


if __name__ == "__main__":
    main()
