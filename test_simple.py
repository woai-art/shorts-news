#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã shorts_news
"""

import sys
import os
sys.path.append('scripts')

def test_basic_functionality():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("Testing basic functionality...")

    try:
        # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        from telegram_bot import NewsTelegramBot
        from telegram_publisher import TelegramPublisher
        print("‚úì Components imported successfully")

        # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
        bot = NewsTelegramBot('config/config.yaml')
        print("‚úì Telegram bot created")

        # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
        test_news = {
            'url': 'https://example.com/test',
            'title': 'Test News',
            'description': 'Test description',
            'source': 'Test',
            'content_type': 'news'
        }

        news_id = bot._save_parsed_news(test_news, 123, -1003056499503)
        print(f"‚úì Test news saved with ID: {news_id}")

        # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ publisher
        publisher = TelegramPublisher('config/config.yaml')
        if publisher.is_available():
            print("‚úì Telegram publisher ready")
        else:
            print("‚ö† Telegram publisher not available")

        print("\nüéâ All basic tests passed!")
        return True

    except Exception as e:
        print(f"‚ùå Error: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 50)
    print("SHORTS_NEWS - Simple Test")
    print("=" * 50)

    success = test_basic_functionality()

    if success:
        print("\n‚úÖ System is ready!")
        print("\nTo start monitoring:")
        print("python channel_monitor.py")
    else:
        print("\n‚ùå System has issues")

if __name__ == "__main__":
    main()
