#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Brightcove –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ yt-dlp
"""

import subprocess
import sys
from pathlib import Path

def test_brightcove_ytdlp():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º yt-dlp —Å Brightcove –≤–∏–¥–µ–æ"""
    
    # URL Brightcove –≤–∏–¥–µ–æ –∏–∑ Politico
    brightcove_url = "https://players.brightcove.net/1155968404/r1WF6V0Pl_default/index.html?videoId=6379606624112"
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º yt-dlp —Å Brightcove –≤–∏–¥–µ–æ:")
    print(f"URL: {brightcove_url}")
    print("=" * 80)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    test_dir = Path("test_media")
    test_dir.mkdir(exist_ok=True)
    
    output_path = test_dir / "brightcove_test.mp4"
    
    # –ö–æ–º–∞–Ω–¥–∞ yt-dlp –¥–ª—è Brightcove
    cmd = [
        'yt-dlp',
        '--format', 'best[ext=mp4]/best',
        '--output', str(output_path),
        '--no-playlist',
        '--user-agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        '--verbose',  # –î–æ–±–∞–≤–ª—è–µ–º verbose –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        brightcove_url
    ]
    
    print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
    print("=" * 80)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º yt-dlp
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=120)
        
        print(f"Return code: {result.returncode}")
        print(f"STDOUT:\n{result.stdout}")
        print(f"STDERR:\n{result.stderr}")
        
        if result.returncode == 0 and output_path.exists():
            print(f"‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {output_path}")
            print(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {output_path.stat().st_size} –±–∞–π—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ")
            
    except subprocess.TimeoutExpired:
        print("‚ùå yt-dlp –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (120—Å)")
    except FileNotFoundError:
        print("‚ùå yt-dlp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install yt-dlp")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_brightcove_ytdlp()
