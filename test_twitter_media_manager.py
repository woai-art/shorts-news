#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ TwitterMediaManager —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç–∏ 334
"""

import sys
sys.path.append('scripts')
sys.path.append('engines/twitter')

from telegram_bot import NewsTelegramBot
from twitter_media_manager import TwitterMediaManager
import yaml

def test_twitter_media_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º TwitterMediaManager —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç–∏ 334"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open('config/config.yaml', 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    bot = NewsTelegramBot('config/config.yaml')
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç—å 334
    news_data = bot.get_news_by_id(334)
    
    if not news_data:
        print("‚ùå –ù–æ–≤–æ—Å—Ç—å 334 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
        
    print("üìä –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ 334:")
    print(f"  Images: {news_data.get('images', [])}")
    print(f"  Videos: {news_data.get('videos', [])}")
    print(f"  Local video path: {news_data.get('local_video_path', '')}")
    print(f"  Avatar path: {news_data.get('avatar_path', '')}")
    
    # –°–æ–∑–¥–∞–µ–º TwitterMediaManager
    media_manager = TwitterMediaManager(config)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –º–µ–¥–∏–∞
    print("\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º TwitterMediaManager...")
    result = media_manager.process_news_media(news_data)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    print(f"  Has media: {result.get('has_media', False)}")
    print(f"  Has images: {result.get('has_images', False)}")
    print(f"  Has videos: {result.get('has_videos', False)}")
    print(f"  Local video path: {result.get('local_video_path', '')}")
    print(f"  Local image path: {result.get('local_image_path', '')}")
    print(f"  Avatar path: {result.get('avatar_path', '')}")

if __name__ == "__main__":
    test_twitter_media_manager()
